
// Modified row builder to support "(po캜칤t치no)" mark
function rowWithCopy(label, value, computed) {
  const tr = document.createElement('tr');
  const td1 = document.createElement('td'); td1.textContent = label;
  const td2 = document.createElement('td');
  const span = document.createElement('span'); span.className = 'val'; span.textContent = (value ?? '').toString();
  if (computed) {
    const s = document.createElement('small'); s.className = 'muted'; s.textContent = ' (po캜칤t치no)';
    td2.appendChild(s);
  }
  const btn = document.createElement('button'); btn.className = 'copybtn'; btn.title = 'Kop칤rovat'; btn.innerHTML = '游늶';
  btn.addEventListener('click', () => navigator.clipboard.writeText((value ?? '').toString()));
  td2.prepend(span); td2.appendChild(btn);
  tr.appendChild(td1); tr.appendChild(td2);
  return tr;
}

// In extract(), render like:
/*
  const computed = (d._computed || {});
  const rows = [
    ['Variabiln칤 symbol', d.variabilni_symbol, null],
    ['Datum vystaven칤', d.datum_vystaveni, null],
    ['Splatnost', d.datum_splatnosti, null],
    ['DUZP', d.duzp, null],
    ['캛치stka bez DPH', d.castka_bez_dph, 'castka_bez_dph'],
    ['DPH', d.dph, 'dph'],
    ['캛치stka s DPH', d.castka_s_dph, 'castka_s_dph'],
    ...
  ];
  rows.forEach(([k,v,key]) => tbody.appendChild(rowWithCopy(k, v, computed[key])));
*/
